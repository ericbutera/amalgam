// Code generated by github.com/switchupcb/copygen
// DO NOT EDIT.

package copygen

import (
	// TODO: add API models
	gql_model "github.com/ericbutera/amalgam/graph/graph/model"
	gql_client "github.com/ericbutera/amalgam/graph/pkg/client"
	db_model "github.com/ericbutera/amalgam/internal/db/models"
	svc_model "github.com/ericbutera/amalgam/internal/service/models"
	pb "github.com/ericbutera/amalgam/pkg/feeds/v1"
)

// DbToServiceFeed copies a *db_model.Feed to a *svc_model.Feed.
func DbToServiceFeed(tF *svc_model.Feed, fF *db_model.Feed) {
	// *svc_model.Feed fields
	tF.ID = fF.Base.ID
	tF.Name = fF.Name
	tF.Url = fF.Url
}

// ServiceToDbFeed copies a *svc_model.Feed to a *db_model.Feed.
func ServiceToDbFeed(tF *db_model.Feed, fF *svc_model.Feed) {
	// *db_model.Feed fields
	tF.Base.ID = fF.ID
	tF.Url = fF.Url
	tF.Name = fF.Name
}

// DbToServiceArticle copies a *db_model.Article to a *svc_model.Article.
func DbToServiceArticle(tA *svc_model.Article, fA *db_model.Article) {
	// *svc_model.Article fields
	tA.ID = fA.Base.ID
	tA.FeedID = fA.FeedID
	tA.Url = fA.Feed.Url
	tA.Title = fA.Title
	tA.ImageUrl = fA.ImageUrl
	tA.Preview = fA.Preview
	tA.Content = fA.Content
	tA.Guid = fA.Guid
	tA.AuthorName = fA.AuthorName
	tA.AuthorEmail = fA.AuthorEmail
}

// ServiceToDbArticle copies a *svc_model.Article to a *db_model.Article.
func ServiceToDbArticle(tA *db_model.Article, fA *svc_model.Article) {
	// *db_model.Article fields
	tA.Base.ID = fA.ID
	tA.FeedID = fA.FeedID
	tA.Feed.Base.ID = fA.ID
	tA.Feed.Url = fA.Url
	tA.Url = fA.Url
	tA.Title = fA.Title
	tA.ImageUrl = fA.ImageUrl
	tA.Preview = fA.Preview
	tA.Content = fA.Content
	tA.Guid = fA.Guid
	tA.AuthorName = fA.AuthorName
	tA.AuthorEmail = fA.AuthorEmail
}

// GraphToServiceFeed copies a *gql_model.Feed to a *svc_model.Feed.
func GraphToServiceFeed(tF *svc_model.Feed, fF *gql_model.Feed) {
	// *svc_model.Feed fields
	tF.ID = fF.ID
	tF.Name = fF.Name
}

// ServiceToGraphFeed copies a *svc_model.Feed to a *gql_model.Feed.
func ServiceToGraphFeed(tF *gql_model.Feed, fF *svc_model.Feed) {
	// *gql_model.Feed fields
	tF.ID = fF.ID
	tF.Name = fF.Name
}

// GraphToServiceArticle copies a *gql_model.Article to a *svc_model.Article.
func GraphToServiceArticle(tA *svc_model.Article, fA *gql_model.Article) {
	// *svc_model.Article fields
	tA.ID = fA.ID
	tA.FeedID = fA.FeedID
	tA.Title = fA.Title
	tA.Preview = fA.Preview
	tA.Content = fA.Content
	tA.AuthorName = *fA.AuthorName
	tA.AuthorEmail = *fA.AuthorEmail
}

// ServiceToGraphArticle copies a *svc_model.Article to a *gql_model.Article.
func ServiceToGraphArticle(tA *gql_model.Article, fA *svc_model.Article) {
	// *gql_model.Article fields
	tA.ID = fA.ID
	tA.FeedID = fA.FeedID
	tA.Title = fA.Title
	tA.Content = fA.Content
	tA.Preview = fA.Preview
	tA.AuthorName = &fA.AuthorName
	tA.AuthorEmail = &fA.AuthorEmail
}

// GraphClientToApiFeedGet copies a *gql_client.GetFeedFeed to a *svc_model.Feed.
func GraphClientToApiFeedGet(tF *svc_model.Feed, fG *gql_client.GetFeedFeed) {
	// *svc_model.Feed fields
	tF.ID = fG.Id
	tF.Name = fG.Name
	tF.Url = fG.Url
}

// GraphClientToApiArticle copies a *gql_client.GetArticleArticle to a *svc_model.Article.
func GraphClientToApiArticle(tA *svc_model.Article, fG *gql_client.GetArticleArticle) {
	// *svc_model.Article fields
	tA.ID = fG.Id
	tA.FeedID = fG.FeedId
	tA.Url = fG.Url
	tA.Title = fG.Title
	tA.ImageUrl = fG.ImageUrl
	tA.Preview = fG.Preview
	tA.Content = fG.Content
	tA.Guid = fG.Guid
	tA.AuthorName = fG.AuthorName
	tA.AuthorEmail = fG.AuthorEmail
}

// GraphClientToApiArticleList copies a *gql_client.ListArticlesArticlesArticle to a *svc_model.Article.
func GraphClientToApiArticleList(tA *svc_model.Article, fL *gql_client.ListArticlesArticlesArticle) {
	// *svc_model.Article fields
	tA.ID = fL.Id
	tA.Url = fL.Url
	tA.Title = fL.Title
	tA.ImageUrl = fL.ImageUrl
	tA.Preview = fL.Preview
	tA.AuthorName = fL.AuthorName
	tA.AuthorEmail = fL.AuthorEmail
}

// ProtoCreateFeedToService copies a *pb.CreateFeedRequest_Feed to a *svc_model.Feed.
func ProtoCreateFeedToService(tF *svc_model.Feed, fC *pb.CreateFeedRequest_Feed) {
	// *svc_model.Feed fields
	tF.Name = fC.Name
	tF.Url = fC.Url
}

// ProtoUpdateFeedToService copies a *pb.UpdateFeedRequest_Feed to a *svc_model.Feed.
func ProtoUpdateFeedToService(tF *svc_model.Feed, fU *pb.UpdateFeedRequest_Feed) {
	// *svc_model.Feed fields
	tF.ID = fU.Id
	tF.Name = fU.Name
	tF.Url = fU.Url
}

// ServiceToProtoFeed copies a *svc_model.Feed to a *pb.Feed.
func ServiceToProtoFeed(tF *pb.Feed, fF *svc_model.Feed) {
	// *pb.Feed fields
	tF.Id = fF.ID
	tF.Url = fF.Url
	tF.Name = fF.Name
}

// ProtoToServiceArticle copies a *pb.Article to a *svc_model.Article.
func ProtoToServiceArticle(tA *svc_model.Article, fA *pb.Article) {
	// *svc_model.Article fields
	tA.ID = fA.Id
	tA.Url = fA.Url
	tA.Title = fA.Title
	tA.ImageUrl = fA.ImageUrl
	tA.Preview = fA.Preview
	tA.Content = fA.Content
	tA.Guid = fA.Guid
	tA.AuthorName = fA.AuthorName
	tA.AuthorEmail = fA.AuthorEmail
}

// ServiceToProtoArticle copies a *svc_model.Article to a *pb.Article.
func ServiceToProtoArticle(tA *pb.Article, fA *svc_model.Article) {
	// *pb.Article fields
	tA.Id = fA.ID
	tA.Title = fA.Title
	tA.Content = fA.Content
	tA.Url = fA.Url
	tA.ImageUrl = fA.ImageUrl
	tA.Preview = fA.Preview
	tA.Guid = fA.Guid
	tA.AuthorName = fA.AuthorName
	tA.AuthorEmail = fA.AuthorEmail
}
