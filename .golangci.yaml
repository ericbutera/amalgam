linters:
  enable-all: true
  # enable:
  #   - gofmt
  #   - gomodguard
  #   - govet
  #   - staticcheck
  #   - stylecheck
  #   - wastedassign
  disable:
    - execinquery
    - gomnd
    - exportloopref
    - godot
    - godox
    - exhaustruct
    - depguard
    - gochecknoinits
    - nlreturn
    - gomoddirectives
    - revive
    - wsl
    - wrapcheck
    - nonamedreturns
    - paralleltest
    - varnamelen
    - ireturn
    - tagliatelle
    - forbidigo
    - gochecknoglobals
    - inamedparam
    - interfacebloat
    - perfsprint
    - nilnil
    - stylecheck
    # - testpackage
    # - testifylint
    - thelper
    - forcetypeassert
    - mnd
    - noctx
    - intrange
    - errorlint
    - err113
    - lll
    - promlinter
    - gosec
    - gocritic
    - exhaustive
    - funlen

linters-settings:
  tagalign:
    align: true
    sort: false
    strict: false

# https://golangci-lint.run/usage/configuration/#issues-configuration
issues:
  # List of regexps of issue texts to exclude.
  #
  # But independently of this option we use default exclude patterns,
  # it can be disabled by `exclude-use-default: false`.
  # To list all excluded by default patterns execute `golangci-lint run --help`
  #
  # Default: https://golangci-lint.run/usage/false-positives/#default-exclusions
  # exclude-rules:
  #   # Run some linter only for test files by excluding its issues for everything else.
  #   - path-except: _test\.go
  #     linters:
  #       - forbidigo
  #   # Exclude some `staticcheck` messages.
  #   - linters:
  #       - staticcheck
  #     text: "SA9003:"
  #   # Exclude `lll` issues for long lines with `go:generate`.
  #   - linters:
  #       - lll
  #     source: "^//go:generate "
  #
  # Which dirs to exclude: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path,
  # including the path prefix if one is set.
  # Default dirs are skipped independently of this option's value (see exclude-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # Default: []
  # exclude-dirs:
  #   - pkg/feeds/v1
  #   - src/external_libs
  #   - autogenerated_by_my_lib
  #
  # Enables exclude of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true
  # exclude-dirs-use-default: false
  #
  # Which files to exclude: they will be analyzed, but issues from them won't be reported.
  # There is no need to include all autogenerated files,
  # we confidently recognize autogenerated files.
  # If it's not, please let us know.
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  # Default: []
  exclude-files:
    - ".*\\.pb\\.go$"
    - pkg/feeds/v1/service_grpc.pb.go
  #   - lib/bad.go
  #
  # Show issues in any part of update files (requires new-from-rev or new-from-patch).
  # Default: false
  whole-files: true
  # Fix found issues (if it's supported by the linter).
  # Default: false
  fix: true

  exclude-rules:
    - path: api/
      linters:
        - depguard
        - revive
