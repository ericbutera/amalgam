/*
Feed API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ServerFeedResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerFeedResponse{}

// ServerFeedResponse struct for ServerFeedResponse
type ServerFeedResponse struct {
	Feed *ModelsFeed `json:"feed,omitempty"`
}

// NewServerFeedResponse instantiates a new ServerFeedResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerFeedResponse() *ServerFeedResponse {
	this := ServerFeedResponse{}
	return &this
}

// NewServerFeedResponseWithDefaults instantiates a new ServerFeedResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerFeedResponseWithDefaults() *ServerFeedResponse {
	this := ServerFeedResponse{}
	return &this
}

// GetFeed returns the Feed field value if set, zero value otherwise.
func (o *ServerFeedResponse) GetFeed() ModelsFeed {
	if o == nil || IsNil(o.Feed) {
		var ret ModelsFeed
		return ret
	}
	return *o.Feed
}

// GetFeedOk returns a tuple with the Feed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerFeedResponse) GetFeedOk() (*ModelsFeed, bool) {
	if o == nil || IsNil(o.Feed) {
		return nil, false
	}
	return o.Feed, true
}

// HasFeed returns a boolean if a field has been set.
func (o *ServerFeedResponse) HasFeed() bool {
	if o != nil && !IsNil(o.Feed) {
		return true
	}

	return false
}

// SetFeed gets a reference to the given ModelsFeed and assigns it to the Feed field.
func (o *ServerFeedResponse) SetFeed(v ModelsFeed) {
	o.Feed = &v
}

func (o ServerFeedResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerFeedResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Feed) {
		toSerialize["feed"] = o.Feed
	}
	return toSerialize, nil
}

type NullableServerFeedResponse struct {
	value *ServerFeedResponse
	isSet bool
}

func (v NullableServerFeedResponse) Get() *ServerFeedResponse {
	return v.value
}

func (v *NullableServerFeedResponse) Set(val *ServerFeedResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableServerFeedResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableServerFeedResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerFeedResponse(val *ServerFeedResponse) *NullableServerFeedResponse {
	return &NullableServerFeedResponse{value: val, isSet: true}
}

func (v NullableServerFeedResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerFeedResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


