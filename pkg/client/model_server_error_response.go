/*
Feed API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ServerErrorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerErrorResponse{}

// ServerErrorResponse struct for ServerErrorResponse
type ServerErrorResponse struct {
	Error *string `json:"error,omitempty"`
}

// NewServerErrorResponse instantiates a new ServerErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerErrorResponse() *ServerErrorResponse {
	this := ServerErrorResponse{}
	return &this
}

// NewServerErrorResponseWithDefaults instantiates a new ServerErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerErrorResponseWithDefaults() *ServerErrorResponse {
	this := ServerErrorResponse{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ServerErrorResponse) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerErrorResponse) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ServerErrorResponse) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *ServerErrorResponse) SetError(v string) {
	o.Error = &v
}

func (o ServerErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerErrorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableServerErrorResponse struct {
	value *ServerErrorResponse
	isSet bool
}

func (v NullableServerErrorResponse) Get() *ServerErrorResponse {
	return v.value
}

func (v *NullableServerErrorResponse) Set(val *ServerErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableServerErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableServerErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerErrorResponse(val *ServerErrorResponse) *NullableServerErrorResponse {
	return &NullableServerErrorResponse{value: val, isSet: true}
}

func (v NullableServerErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


