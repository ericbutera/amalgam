/*
Feed API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ServerFeedsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerFeedsResponse{}

// ServerFeedsResponse struct for ServerFeedsResponse
type ServerFeedsResponse struct {
	Feeds []ServerListFeed `json:"feeds,omitempty"`
}

// NewServerFeedsResponse instantiates a new ServerFeedsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerFeedsResponse() *ServerFeedsResponse {
	this := ServerFeedsResponse{}
	return &this
}

// NewServerFeedsResponseWithDefaults instantiates a new ServerFeedsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerFeedsResponseWithDefaults() *ServerFeedsResponse {
	this := ServerFeedsResponse{}
	return &this
}

// GetFeeds returns the Feeds field value if set, zero value otherwise.
func (o *ServerFeedsResponse) GetFeeds() []ServerListFeed {
	if o == nil || IsNil(o.Feeds) {
		var ret []ServerListFeed
		return ret
	}
	return o.Feeds
}

// GetFeedsOk returns a tuple with the Feeds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerFeedsResponse) GetFeedsOk() ([]ServerListFeed, bool) {
	if o == nil || IsNil(o.Feeds) {
		return nil, false
	}
	return o.Feeds, true
}

// HasFeeds returns a boolean if a field has been set.
func (o *ServerFeedsResponse) HasFeeds() bool {
	if o != nil && !IsNil(o.Feeds) {
		return true
	}

	return false
}

// SetFeeds gets a reference to the given []ServerListFeed and assigns it to the Feeds field.
func (o *ServerFeedsResponse) SetFeeds(v []ServerListFeed) {
	o.Feeds = v
}

func (o ServerFeedsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerFeedsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Feeds) {
		toSerialize["feeds"] = o.Feeds
	}
	return toSerialize, nil
}

type NullableServerFeedsResponse struct {
	value *ServerFeedsResponse
	isSet bool
}

func (v NullableServerFeedsResponse) Get() *ServerFeedsResponse {
	return v.value
}

func (v *NullableServerFeedsResponse) Set(val *ServerFeedsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableServerFeedsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableServerFeedsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerFeedsResponse(val *ServerFeedsResponse) *NullableServerFeedsResponse {
	return &NullableServerFeedsResponse{value: val, isSet: true}
}

func (v NullableServerFeedsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerFeedsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
