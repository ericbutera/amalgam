/*
Feed API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ServerFeedUpdateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerFeedUpdateResponse{}

// ServerFeedUpdateResponse struct for ServerFeedUpdateResponse
type ServerFeedUpdateResponse struct {
	Feed *ModelsFeed `json:"feed,omitempty"`
}

// NewServerFeedUpdateResponse instantiates a new ServerFeedUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerFeedUpdateResponse() *ServerFeedUpdateResponse {
	this := ServerFeedUpdateResponse{}
	return &this
}

// NewServerFeedUpdateResponseWithDefaults instantiates a new ServerFeedUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerFeedUpdateResponseWithDefaults() *ServerFeedUpdateResponse {
	this := ServerFeedUpdateResponse{}
	return &this
}

// GetFeed returns the Feed field value if set, zero value otherwise.
func (o *ServerFeedUpdateResponse) GetFeed() ModelsFeed {
	if o == nil || IsNil(o.Feed) {
		var ret ModelsFeed
		return ret
	}
	return *o.Feed
}

// GetFeedOk returns a tuple with the Feed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerFeedUpdateResponse) GetFeedOk() (*ModelsFeed, bool) {
	if o == nil || IsNil(o.Feed) {
		return nil, false
	}
	return o.Feed, true
}

// HasFeed returns a boolean if a field has been set.
func (o *ServerFeedUpdateResponse) HasFeed() bool {
	if o != nil && !IsNil(o.Feed) {
		return true
	}

	return false
}

// SetFeed gets a reference to the given ModelsFeed and assigns it to the Feed field.
func (o *ServerFeedUpdateResponse) SetFeed(v ModelsFeed) {
	o.Feed = &v
}

func (o ServerFeedUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerFeedUpdateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Feed) {
		toSerialize["feed"] = o.Feed
	}
	return toSerialize, nil
}

type NullableServerFeedUpdateResponse struct {
	value *ServerFeedUpdateResponse
	isSet bool
}

func (v NullableServerFeedUpdateResponse) Get() *ServerFeedUpdateResponse {
	return v.value
}

func (v *NullableServerFeedUpdateResponse) Set(val *ServerFeedUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableServerFeedUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableServerFeedUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerFeedUpdateResponse(val *ServerFeedUpdateResponse) *NullableServerFeedUpdateResponse {
	return &NullableServerFeedUpdateResponse{value: val, isSet: true}
}

func (v NullableServerFeedUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerFeedUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


