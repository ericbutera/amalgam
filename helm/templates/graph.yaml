apiVersion: v1
kind: Service
metadata:
  name: graph
spec:
  selector:
    app: graph
  ports:
    - name: graph
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: graph
  labels:
    app: graph
spec:
  selector:
    matchLabels:
      app: graph
  template:
    metadata:
      labels:
        app: graph
    spec:
      containers:
        - name: graph
          image: graph-image
          ports:
            - containerPort: 8080
          env:
            - name: GRAPH_PORT
              value: "8080"
            - name: RPC_HOST
              value: "rpc:50051"
            - name: RPC_INSECURE
              value: "true"
            - name: OTEL_ENABLE
              value: "true"
            - name: OTEL_SERVICE_NAME
              value: "graph"
            - name: OTEL_EXPORTER_OTLP_INSECURE
              value: "true"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://lgtm:4318"
            - name: OTEL_LOGS_EXPORTER
              value: "otlp"
            - name: CORS_ALLOW_ORIGINS
              value: "http://localhost:3000"
            - name: CORS_ALLOW_METHODS
              value: "GET,POST,PUT"
            - name: CORS_ALLOW_HEADERS
              value: "Content-Type,Authorization,Origin"
            - name: CORS_EXPOSE_HEADERS
              value: "Content-Length"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              initialDelaySeconds: 5
              periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8080
              initialDelaySeconds: 5
              periodSeconds: 5 # todo: configurable via values.yaml
